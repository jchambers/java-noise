package com.eatthepath.noise;

import javax.annotation.Nullable;
import java.security.KeyPair;
import java.security.PublicKey;
import java.util.Objects;

@SuppressWarnings("unused")
public class NoiseHandshakeBuilder {

  private final NoiseHandshake.Role role;

  private final HandshakePattern handshakePattern;

  @Nullable private final KeyPair localStaticKeyPair;
  @Nullable private final PublicKey remoteStaticPublicKey;

  @Nullable private KeyPair localEphemeralKeyPair;
  @Nullable private PublicKey remoteEphemeralPublicKey;

  @Nullable private byte[] prologue;

  @Nullable private NoiseCipher cipher;
  @Nullable private NoiseHash hash;
  @Nullable private NoiseKeyAgreement keyAgreement;

  private NoiseHandshakeBuilder(final NoiseHandshake.Role role,
                                final HandshakePattern handshakePattern,
                                @Nullable final KeyPair localStaticKeyPair,
                                @Nullable final PublicKey remoteStaticPublicKey) {

    this.role = role;
    this.handshakePattern = handshakePattern;
    this.localStaticKeyPair = localStaticKeyPair;
    this.remoteStaticPublicKey = remoteStaticPublicKey;
  }

  public NoiseHandshakeBuilder setLocalEphemeralKeyPair(@Nullable final KeyPair localEphemeralKeyPair) {
    this.localEphemeralKeyPair = localEphemeralKeyPair;
    return this;
  }

  public NoiseHandshakeBuilder setRemoteEphemeralPublicKey(@Nullable final PublicKey remoteEphemeralPublicKey) {
    this.remoteEphemeralPublicKey = remoteEphemeralPublicKey;
    return this;
  }

  public NoiseHandshakeBuilder setPrologue(@Nullable final byte[] prologue) {
    this.prologue = prologue;
    return this;
  }

  public NoiseHandshakeBuilder setCipher(final NoiseCipher cipher) {
    this.cipher = Objects.requireNonNull(cipher, "Cipher must not be null");
    return this;
  }

  public NoiseHandshakeBuilder setHash(final NoiseHash hash) {
    this.hash = Objects.requireNonNull(hash, "Hash algorithm must not be null");
    return this;
  }

  public NoiseHandshakeBuilder setKeyAgreement(final NoiseKeyAgreement keyAgreement) {
    this.keyAgreement = Objects.requireNonNull(keyAgreement, "Key agreement algorithm must not be null");
    return this;
  }

  public NoiseHandshake build() {
    if (cipher == null) {
      throw new IllegalStateException("Must set a cipher before building a Noise handshake");
    }

    if (hash == null) {
      throw new IllegalArgumentException("Must set a hashing algorithm before building a Noise handshake");
    }

    if (keyAgreement == null) {
      throw new IllegalArgumentException("Must set a key agreement algorithm before building a Noise handshake");
    }

    // TODO Check key compatibility

    return new NoiseHandshake(role,
        handshakePattern,
        keyAgreement,
        cipher,
        hash,
        prologue,
        localStaticKeyPair,
        localEphemeralKeyPair,
        remoteStaticPublicKey,
        remoteEphemeralPublicKey,
        null);
  }

  // The following initializer methods are auto-generated by GenerateHandshakeBuilderApp
  public static NoiseHandshakeBuilder forNNInitiator() {
    try {
      return new NoiseHandshakeBuilder(NoiseHandshake.Role.INITIATOR,
          HandshakePattern.getInstance("NN"),
          null,
          null);
    } catch (final NoSuchPatternException e) {
      throw new AssertionError("Statically-generated handshake pattern not found", e);
    }
  }

  public static NoiseHandshakeBuilder forNNResponder() {
    try {
      return new NoiseHandshakeBuilder(NoiseHandshake.Role.RESPONDER,
          HandshakePattern.getInstance("NN"),
          null,
          null);
    } catch (final NoSuchPatternException e) {
      throw new AssertionError("Statically-generated handshake pattern not found", e);
    }
  }

  public static NoiseHandshakeBuilder forKNInitiator(final KeyPair localStaticKeyPair) {
    try {
      return new NoiseHandshakeBuilder(NoiseHandshake.Role.INITIATOR,
          HandshakePattern.getInstance("KN"),
          localStaticKeyPair,
          null);
    } catch (final NoSuchPatternException e) {
      throw new AssertionError("Statically-generated handshake pattern not found", e);
    }
  }

  public static NoiseHandshakeBuilder forKNResponder(final PublicKey remoteStaticPublicKey) {
    try {
      return new NoiseHandshakeBuilder(NoiseHandshake.Role.RESPONDER,
          HandshakePattern.getInstance("KN"),
          null,
          remoteStaticPublicKey);
    } catch (final NoSuchPatternException e) {
      throw new AssertionError("Statically-generated handshake pattern not found", e);
    }
  }

  public static NoiseHandshakeBuilder forNKInitiator(final PublicKey remoteStaticPublicKey) {
    try {
      return new NoiseHandshakeBuilder(NoiseHandshake.Role.INITIATOR,
          HandshakePattern.getInstance("NK"),
          null,
          remoteStaticPublicKey);
    } catch (final NoSuchPatternException e) {
      throw new AssertionError("Statically-generated handshake pattern not found", e);
    }
  }

  public static NoiseHandshakeBuilder forNKResponder(final KeyPair localStaticKeyPair) {
    try {
      return new NoiseHandshakeBuilder(NoiseHandshake.Role.RESPONDER,
          HandshakePattern.getInstance("NK"),
          localStaticKeyPair,
          null);
    } catch (final NoSuchPatternException e) {
      throw new AssertionError("Statically-generated handshake pattern not found", e);
    }
  }

  public static NoiseHandshakeBuilder forKKInitiator(final KeyPair localStaticKeyPair, final PublicKey remoteStaticPublicKey) {
    try {
      return new NoiseHandshakeBuilder(NoiseHandshake.Role.INITIATOR,
          HandshakePattern.getInstance("KK"),
          localStaticKeyPair,
          remoteStaticPublicKey);
    } catch (final NoSuchPatternException e) {
      throw new AssertionError("Statically-generated handshake pattern not found", e);
    }
  }

  public static NoiseHandshakeBuilder forKKResponder(final KeyPair localStaticKeyPair, final PublicKey remoteStaticPublicKey) {
    try {
      return new NoiseHandshakeBuilder(NoiseHandshake.Role.RESPONDER,
          HandshakePattern.getInstance("KK"),
          localStaticKeyPair,
          remoteStaticPublicKey);
    } catch (final NoSuchPatternException e) {
      throw new AssertionError("Statically-generated handshake pattern not found", e);
    }
  }

  public static NoiseHandshakeBuilder forNXInitiator() {
    try {
      return new NoiseHandshakeBuilder(NoiseHandshake.Role.INITIATOR,
          HandshakePattern.getInstance("NX"),
          null,
          null);
    } catch (final NoSuchPatternException e) {
      throw new AssertionError("Statically-generated handshake pattern not found", e);
    }
  }

  public static NoiseHandshakeBuilder forNXResponder(final KeyPair localStaticKeyPair) {
    try {
      return new NoiseHandshakeBuilder(NoiseHandshake.Role.RESPONDER,
          HandshakePattern.getInstance("NX"),
          localStaticKeyPair,
          null);
    } catch (final NoSuchPatternException e) {
      throw new AssertionError("Statically-generated handshake pattern not found", e);
    }
  }

  public static NoiseHandshakeBuilder forKXInitiator(final KeyPair localStaticKeyPair) {
    try {
      return new NoiseHandshakeBuilder(NoiseHandshake.Role.INITIATOR,
          HandshakePattern.getInstance("KX"),
          localStaticKeyPair,
          null);
    } catch (final NoSuchPatternException e) {
      throw new AssertionError("Statically-generated handshake pattern not found", e);
    }
  }

  public static NoiseHandshakeBuilder forKXResponder(final KeyPair localStaticKeyPair, final PublicKey remoteStaticPublicKey) {
    try {
      return new NoiseHandshakeBuilder(NoiseHandshake.Role.RESPONDER,
          HandshakePattern.getInstance("KX"),
          localStaticKeyPair,
          remoteStaticPublicKey);
    } catch (final NoSuchPatternException e) {
      throw new AssertionError("Statically-generated handshake pattern not found", e);
    }
  }

  public static NoiseHandshakeBuilder forXNInitiator(final KeyPair localStaticKeyPair) {
    try {
      return new NoiseHandshakeBuilder(NoiseHandshake.Role.INITIATOR,
          HandshakePattern.getInstance("XN"),
          localStaticKeyPair,
          null);
    } catch (final NoSuchPatternException e) {
      throw new AssertionError("Statically-generated handshake pattern not found", e);
    }
  }

  public static NoiseHandshakeBuilder forXNResponder() {
    try {
      return new NoiseHandshakeBuilder(NoiseHandshake.Role.RESPONDER,
          HandshakePattern.getInstance("XN"),
          null,
          null);
    } catch (final NoSuchPatternException e) {
      throw new AssertionError("Statically-generated handshake pattern not found", e);
    }
  }

  public static NoiseHandshakeBuilder forINInitiator(final KeyPair localStaticKeyPair) {
    try {
      return new NoiseHandshakeBuilder(NoiseHandshake.Role.INITIATOR,
          HandshakePattern.getInstance("IN"),
          localStaticKeyPair,
          null);
    } catch (final NoSuchPatternException e) {
      throw new AssertionError("Statically-generated handshake pattern not found", e);
    }
  }

  public static NoiseHandshakeBuilder forINResponder() {
    try {
      return new NoiseHandshakeBuilder(NoiseHandshake.Role.RESPONDER,
          HandshakePattern.getInstance("IN"),
          null,
          null);
    } catch (final NoSuchPatternException e) {
      throw new AssertionError("Statically-generated handshake pattern not found", e);
    }
  }

  public static NoiseHandshakeBuilder forXKInitiator(final KeyPair localStaticKeyPair, final PublicKey remoteStaticPublicKey) {
    try {
      return new NoiseHandshakeBuilder(NoiseHandshake.Role.INITIATOR,
          HandshakePattern.getInstance("XK"),
          localStaticKeyPair,
          remoteStaticPublicKey);
    } catch (final NoSuchPatternException e) {
      throw new AssertionError("Statically-generated handshake pattern not found", e);
    }
  }

  public static NoiseHandshakeBuilder forXKResponder(final KeyPair localStaticKeyPair) {
    try {
      return new NoiseHandshakeBuilder(NoiseHandshake.Role.RESPONDER,
          HandshakePattern.getInstance("XK"),
          localStaticKeyPair,
          null);
    } catch (final NoSuchPatternException e) {
      throw new AssertionError("Statically-generated handshake pattern not found", e);
    }
  }

  public static NoiseHandshakeBuilder forIKInitiator(final KeyPair localStaticKeyPair, final PublicKey remoteStaticPublicKey) {
    try {
      return new NoiseHandshakeBuilder(NoiseHandshake.Role.INITIATOR,
          HandshakePattern.getInstance("IK"),
          localStaticKeyPair,
          remoteStaticPublicKey);
    } catch (final NoSuchPatternException e) {
      throw new AssertionError("Statically-generated handshake pattern not found", e);
    }
  }

  public static NoiseHandshakeBuilder forIKResponder(final KeyPair localStaticKeyPair) {
    try {
      return new NoiseHandshakeBuilder(NoiseHandshake.Role.RESPONDER,
          HandshakePattern.getInstance("IK"),
          localStaticKeyPair,
          null);
    } catch (final NoSuchPatternException e) {
      throw new AssertionError("Statically-generated handshake pattern not found", e);
    }
  }

  public static NoiseHandshakeBuilder forXXInitiator(final KeyPair localStaticKeyPair) {
    try {
      return new NoiseHandshakeBuilder(NoiseHandshake.Role.INITIATOR,
          HandshakePattern.getInstance("XX"),
          localStaticKeyPair,
          null);
    } catch (final NoSuchPatternException e) {
      throw new AssertionError("Statically-generated handshake pattern not found", e);
    }
  }

  public static NoiseHandshakeBuilder forXXResponder(final KeyPair localStaticKeyPair) {
    try {
      return new NoiseHandshakeBuilder(NoiseHandshake.Role.RESPONDER,
          HandshakePattern.getInstance("XX"),
          localStaticKeyPair,
          null);
    } catch (final NoSuchPatternException e) {
      throw new AssertionError("Statically-generated handshake pattern not found", e);
    }
  }

  public static NoiseHandshakeBuilder forIXInitiator(final KeyPair localStaticKeyPair) {
    try {
      return new NoiseHandshakeBuilder(NoiseHandshake.Role.INITIATOR,
          HandshakePattern.getInstance("IX"),
          localStaticKeyPair,
          null);
    } catch (final NoSuchPatternException e) {
      throw new AssertionError("Statically-generated handshake pattern not found", e);
    }
  }

  public static NoiseHandshakeBuilder forIXResponder(final KeyPair localStaticKeyPair) {
    try {
      return new NoiseHandshakeBuilder(NoiseHandshake.Role.RESPONDER,
          HandshakePattern.getInstance("IX"),
          localStaticKeyPair,
          null);
    } catch (final NoSuchPatternException e) {
      throw new AssertionError("Statically-generated handshake pattern not found", e);
    }
  }

  public static NoiseHandshakeBuilder forNK1Initiator(final PublicKey remoteStaticPublicKey) {
    try {
      return new NoiseHandshakeBuilder(NoiseHandshake.Role.INITIATOR,
          HandshakePattern.getInstance("NK1"),
          null,
          remoteStaticPublicKey);
    } catch (final NoSuchPatternException e) {
      throw new AssertionError("Statically-generated handshake pattern not found", e);
    }
  }

  public static NoiseHandshakeBuilder forNK1Responder(final KeyPair localStaticKeyPair) {
    try {
      return new NoiseHandshakeBuilder(NoiseHandshake.Role.RESPONDER,
          HandshakePattern.getInstance("NK1"),
          localStaticKeyPair,
          null);
    } catch (final NoSuchPatternException e) {
      throw new AssertionError("Statically-generated handshake pattern not found", e);
    }
  }

  public static NoiseHandshakeBuilder forNX1Initiator() {
    try {
      return new NoiseHandshakeBuilder(NoiseHandshake.Role.INITIATOR,
          HandshakePattern.getInstance("NX1"),
          null,
          null);
    } catch (final NoSuchPatternException e) {
      throw new AssertionError("Statically-generated handshake pattern not found", e);
    }
  }

  public static NoiseHandshakeBuilder forNX1Responder(final KeyPair localStaticKeyPair) {
    try {
      return new NoiseHandshakeBuilder(NoiseHandshake.Role.RESPONDER,
          HandshakePattern.getInstance("NX1"),
          localStaticKeyPair,
          null);
    } catch (final NoSuchPatternException e) {
      throw new AssertionError("Statically-generated handshake pattern not found", e);
    }
  }

  public static NoiseHandshakeBuilder forX1NInitiator(final KeyPair localStaticKeyPair) {
    try {
      return new NoiseHandshakeBuilder(NoiseHandshake.Role.INITIATOR,
          HandshakePattern.getInstance("X1N"),
          localStaticKeyPair,
          null);
    } catch (final NoSuchPatternException e) {
      throw new AssertionError("Statically-generated handshake pattern not found", e);
    }
  }

  public static NoiseHandshakeBuilder forX1NResponder() {
    try {
      return new NoiseHandshakeBuilder(NoiseHandshake.Role.RESPONDER,
          HandshakePattern.getInstance("X1N"),
          null,
          null);
    } catch (final NoSuchPatternException e) {
      throw new AssertionError("Statically-generated handshake pattern not found", e);
    }
  }

  public static NoiseHandshakeBuilder forX1KInitiator(final KeyPair localStaticKeyPair, final PublicKey remoteStaticPublicKey) {
    try {
      return new NoiseHandshakeBuilder(NoiseHandshake.Role.INITIATOR,
          HandshakePattern.getInstance("X1K"),
          localStaticKeyPair,
          remoteStaticPublicKey);
    } catch (final NoSuchPatternException e) {
      throw new AssertionError("Statically-generated handshake pattern not found", e);
    }
  }

  public static NoiseHandshakeBuilder forX1KResponder(final KeyPair localStaticKeyPair) {
    try {
      return new NoiseHandshakeBuilder(NoiseHandshake.Role.RESPONDER,
          HandshakePattern.getInstance("X1K"),
          localStaticKeyPair,
          null);
    } catch (final NoSuchPatternException e) {
      throw new AssertionError("Statically-generated handshake pattern not found", e);
    }
  }

  public static NoiseHandshakeBuilder forXK1Initiator(final KeyPair localStaticKeyPair, final PublicKey remoteStaticPublicKey) {
    try {
      return new NoiseHandshakeBuilder(NoiseHandshake.Role.INITIATOR,
          HandshakePattern.getInstance("XK1"),
          localStaticKeyPair,
          remoteStaticPublicKey);
    } catch (final NoSuchPatternException e) {
      throw new AssertionError("Statically-generated handshake pattern not found", e);
    }
  }

  public static NoiseHandshakeBuilder forXK1Responder(final KeyPair localStaticKeyPair) {
    try {
      return new NoiseHandshakeBuilder(NoiseHandshake.Role.RESPONDER,
          HandshakePattern.getInstance("XK1"),
          localStaticKeyPair,
          null);
    } catch (final NoSuchPatternException e) {
      throw new AssertionError("Statically-generated handshake pattern not found", e);
    }
  }

  public static NoiseHandshakeBuilder forX1K1Initiator(final KeyPair localStaticKeyPair, final PublicKey remoteStaticPublicKey) {
    try {
      return new NoiseHandshakeBuilder(NoiseHandshake.Role.INITIATOR,
          HandshakePattern.getInstance("X1K1"),
          localStaticKeyPair,
          remoteStaticPublicKey);
    } catch (final NoSuchPatternException e) {
      throw new AssertionError("Statically-generated handshake pattern not found", e);
    }
  }

  public static NoiseHandshakeBuilder forX1K1Responder(final KeyPair localStaticKeyPair) {
    try {
      return new NoiseHandshakeBuilder(NoiseHandshake.Role.RESPONDER,
          HandshakePattern.getInstance("X1K1"),
          localStaticKeyPair,
          null);
    } catch (final NoSuchPatternException e) {
      throw new AssertionError("Statically-generated handshake pattern not found", e);
    }
  }

  public static NoiseHandshakeBuilder forX1XInitiator(final KeyPair localStaticKeyPair) {
    try {
      return new NoiseHandshakeBuilder(NoiseHandshake.Role.INITIATOR,
          HandshakePattern.getInstance("X1X"),
          localStaticKeyPair,
          null);
    } catch (final NoSuchPatternException e) {
      throw new AssertionError("Statically-generated handshake pattern not found", e);
    }
  }

  public static NoiseHandshakeBuilder forX1XResponder(final KeyPair localStaticKeyPair) {
    try {
      return new NoiseHandshakeBuilder(NoiseHandshake.Role.RESPONDER,
          HandshakePattern.getInstance("X1X"),
          localStaticKeyPair,
          null);
    } catch (final NoSuchPatternException e) {
      throw new AssertionError("Statically-generated handshake pattern not found", e);
    }
  }

  public static NoiseHandshakeBuilder forXX1Initiator(final KeyPair localStaticKeyPair) {
    try {
      return new NoiseHandshakeBuilder(NoiseHandshake.Role.INITIATOR,
          HandshakePattern.getInstance("XX1"),
          localStaticKeyPair,
          null);
    } catch (final NoSuchPatternException e) {
      throw new AssertionError("Statically-generated handshake pattern not found", e);
    }
  }

  public static NoiseHandshakeBuilder forXX1Responder(final KeyPair localStaticKeyPair) {
    try {
      return new NoiseHandshakeBuilder(NoiseHandshake.Role.RESPONDER,
          HandshakePattern.getInstance("XX1"),
          localStaticKeyPair,
          null);
    } catch (final NoSuchPatternException e) {
      throw new AssertionError("Statically-generated handshake pattern not found", e);
    }
  }

  public static NoiseHandshakeBuilder forX1X1Initiator(final KeyPair localStaticKeyPair) {
    try {
      return new NoiseHandshakeBuilder(NoiseHandshake.Role.INITIATOR,
          HandshakePattern.getInstance("X1X1"),
          localStaticKeyPair,
          null);
    } catch (final NoSuchPatternException e) {
      throw new AssertionError("Statically-generated handshake pattern not found", e);
    }
  }

  public static NoiseHandshakeBuilder forX1X1Responder(final KeyPair localStaticKeyPair) {
    try {
      return new NoiseHandshakeBuilder(NoiseHandshake.Role.RESPONDER,
          HandshakePattern.getInstance("X1X1"),
          localStaticKeyPair,
          null);
    } catch (final NoSuchPatternException e) {
      throw new AssertionError("Statically-generated handshake pattern not found", e);
    }
  }

  public static NoiseHandshakeBuilder forK1NInitiator(final KeyPair localStaticKeyPair) {
    try {
      return new NoiseHandshakeBuilder(NoiseHandshake.Role.INITIATOR,
          HandshakePattern.getInstance("K1N"),
          localStaticKeyPair,
          null);
    } catch (final NoSuchPatternException e) {
      throw new AssertionError("Statically-generated handshake pattern not found", e);
    }
  }

  public static NoiseHandshakeBuilder forK1NResponder(final PublicKey remoteStaticPublicKey) {
    try {
      return new NoiseHandshakeBuilder(NoiseHandshake.Role.RESPONDER,
          HandshakePattern.getInstance("K1N"),
          null,
          remoteStaticPublicKey);
    } catch (final NoSuchPatternException e) {
      throw new AssertionError("Statically-generated handshake pattern not found", e);
    }
  }

  public static NoiseHandshakeBuilder forK1KInitiator(final KeyPair localStaticKeyPair, final PublicKey remoteStaticPublicKey) {
    try {
      return new NoiseHandshakeBuilder(NoiseHandshake.Role.INITIATOR,
          HandshakePattern.getInstance("K1K"),
          localStaticKeyPair,
          remoteStaticPublicKey);
    } catch (final NoSuchPatternException e) {
      throw new AssertionError("Statically-generated handshake pattern not found", e);
    }
  }

  public static NoiseHandshakeBuilder forK1KResponder(final KeyPair localStaticKeyPair, final PublicKey remoteStaticPublicKey) {
    try {
      return new NoiseHandshakeBuilder(NoiseHandshake.Role.RESPONDER,
          HandshakePattern.getInstance("K1K"),
          localStaticKeyPair,
          remoteStaticPublicKey);
    } catch (final NoSuchPatternException e) {
      throw new AssertionError("Statically-generated handshake pattern not found", e);
    }
  }

  public static NoiseHandshakeBuilder forKK1Initiator(final KeyPair localStaticKeyPair, final PublicKey remoteStaticPublicKey) {
    try {
      return new NoiseHandshakeBuilder(NoiseHandshake.Role.INITIATOR,
          HandshakePattern.getInstance("KK1"),
          localStaticKeyPair,
          remoteStaticPublicKey);
    } catch (final NoSuchPatternException e) {
      throw new AssertionError("Statically-generated handshake pattern not found", e);
    }
  }

  public static NoiseHandshakeBuilder forKK1Responder(final KeyPair localStaticKeyPair, final PublicKey remoteStaticPublicKey) {
    try {
      return new NoiseHandshakeBuilder(NoiseHandshake.Role.RESPONDER,
          HandshakePattern.getInstance("KK1"),
          localStaticKeyPair,
          remoteStaticPublicKey);
    } catch (final NoSuchPatternException e) {
      throw new AssertionError("Statically-generated handshake pattern not found", e);
    }
  }

  public static NoiseHandshakeBuilder forK1K1Initiator(final KeyPair localStaticKeyPair, final PublicKey remoteStaticPublicKey) {
    try {
      return new NoiseHandshakeBuilder(NoiseHandshake.Role.INITIATOR,
          HandshakePattern.getInstance("K1K1"),
          localStaticKeyPair,
          remoteStaticPublicKey);
    } catch (final NoSuchPatternException e) {
      throw new AssertionError("Statically-generated handshake pattern not found", e);
    }
  }

  public static NoiseHandshakeBuilder forK1K1Responder(final KeyPair localStaticKeyPair, final PublicKey remoteStaticPublicKey) {
    try {
      return new NoiseHandshakeBuilder(NoiseHandshake.Role.RESPONDER,
          HandshakePattern.getInstance("K1K1"),
          localStaticKeyPair,
          remoteStaticPublicKey);
    } catch (final NoSuchPatternException e) {
      throw new AssertionError("Statically-generated handshake pattern not found", e);
    }
  }

  public static NoiseHandshakeBuilder forK1XInitiator(final KeyPair localStaticKeyPair) {
    try {
      return new NoiseHandshakeBuilder(NoiseHandshake.Role.INITIATOR,
          HandshakePattern.getInstance("K1X"),
          localStaticKeyPair,
          null);
    } catch (final NoSuchPatternException e) {
      throw new AssertionError("Statically-generated handshake pattern not found", e);
    }
  }

  public static NoiseHandshakeBuilder forK1XResponder(final KeyPair localStaticKeyPair, final PublicKey remoteStaticPublicKey) {
    try {
      return new NoiseHandshakeBuilder(NoiseHandshake.Role.RESPONDER,
          HandshakePattern.getInstance("K1X"),
          localStaticKeyPair,
          remoteStaticPublicKey);
    } catch (final NoSuchPatternException e) {
      throw new AssertionError("Statically-generated handshake pattern not found", e);
    }
  }

  public static NoiseHandshakeBuilder forKX1Initiator(final KeyPair localStaticKeyPair) {
    try {
      return new NoiseHandshakeBuilder(NoiseHandshake.Role.INITIATOR,
          HandshakePattern.getInstance("KX1"),
          localStaticKeyPair,
          null);
    } catch (final NoSuchPatternException e) {
      throw new AssertionError("Statically-generated handshake pattern not found", e);
    }
  }

  public static NoiseHandshakeBuilder forKX1Responder(final KeyPair localStaticKeyPair, final PublicKey remoteStaticPublicKey) {
    try {
      return new NoiseHandshakeBuilder(NoiseHandshake.Role.RESPONDER,
          HandshakePattern.getInstance("KX1"),
          localStaticKeyPair,
          remoteStaticPublicKey);
    } catch (final NoSuchPatternException e) {
      throw new AssertionError("Statically-generated handshake pattern not found", e);
    }
  }

  public static NoiseHandshakeBuilder forK1X1Initiator(final KeyPair localStaticKeyPair) {
    try {
      return new NoiseHandshakeBuilder(NoiseHandshake.Role.INITIATOR,
          HandshakePattern.getInstance("K1X1"),
          localStaticKeyPair,
          null);
    } catch (final NoSuchPatternException e) {
      throw new AssertionError("Statically-generated handshake pattern not found", e);
    }
  }

  public static NoiseHandshakeBuilder forK1X1Responder(final KeyPair localStaticKeyPair, final PublicKey remoteStaticPublicKey) {
    try {
      return new NoiseHandshakeBuilder(NoiseHandshake.Role.RESPONDER,
          HandshakePattern.getInstance("K1X1"),
          localStaticKeyPair,
          remoteStaticPublicKey);
    } catch (final NoSuchPatternException e) {
      throw new AssertionError("Statically-generated handshake pattern not found", e);
    }
  }

  public static NoiseHandshakeBuilder forI1NInitiator(final KeyPair localStaticKeyPair) {
    try {
      return new NoiseHandshakeBuilder(NoiseHandshake.Role.INITIATOR,
          HandshakePattern.getInstance("I1N"),
          localStaticKeyPair,
          null);
    } catch (final NoSuchPatternException e) {
      throw new AssertionError("Statically-generated handshake pattern not found", e);
    }
  }

  public static NoiseHandshakeBuilder forI1NResponder() {
    try {
      return new NoiseHandshakeBuilder(NoiseHandshake.Role.RESPONDER,
          HandshakePattern.getInstance("I1N"),
          null,
          null);
    } catch (final NoSuchPatternException e) {
      throw new AssertionError("Statically-generated handshake pattern not found", e);
    }
  }

  public static NoiseHandshakeBuilder forI1KInitiator(final KeyPair localStaticKeyPair, final PublicKey remoteStaticPublicKey) {
    try {
      return new NoiseHandshakeBuilder(NoiseHandshake.Role.INITIATOR,
          HandshakePattern.getInstance("I1K"),
          localStaticKeyPair,
          remoteStaticPublicKey);
    } catch (final NoSuchPatternException e) {
      throw new AssertionError("Statically-generated handshake pattern not found", e);
    }
  }

  public static NoiseHandshakeBuilder forI1KResponder(final KeyPair localStaticKeyPair) {
    try {
      return new NoiseHandshakeBuilder(NoiseHandshake.Role.RESPONDER,
          HandshakePattern.getInstance("I1K"),
          localStaticKeyPair,
          null);
    } catch (final NoSuchPatternException e) {
      throw new AssertionError("Statically-generated handshake pattern not found", e);
    }
  }

  public static NoiseHandshakeBuilder forIK1Initiator(final KeyPair localStaticKeyPair, final PublicKey remoteStaticPublicKey) {
    try {
      return new NoiseHandshakeBuilder(NoiseHandshake.Role.INITIATOR,
          HandshakePattern.getInstance("IK1"),
          localStaticKeyPair,
          remoteStaticPublicKey);
    } catch (final NoSuchPatternException e) {
      throw new AssertionError("Statically-generated handshake pattern not found", e);
    }
  }

  public static NoiseHandshakeBuilder forIK1Responder(final KeyPair localStaticKeyPair) {
    try {
      return new NoiseHandshakeBuilder(NoiseHandshake.Role.RESPONDER,
          HandshakePattern.getInstance("IK1"),
          localStaticKeyPair,
          null);
    } catch (final NoSuchPatternException e) {
      throw new AssertionError("Statically-generated handshake pattern not found", e);
    }
  }

  public static NoiseHandshakeBuilder forI1K1Initiator(final KeyPair localStaticKeyPair, final PublicKey remoteStaticPublicKey) {
    try {
      return new NoiseHandshakeBuilder(NoiseHandshake.Role.INITIATOR,
          HandshakePattern.getInstance("I1K1"),
          localStaticKeyPair,
          remoteStaticPublicKey);
    } catch (final NoSuchPatternException e) {
      throw new AssertionError("Statically-generated handshake pattern not found", e);
    }
  }

  public static NoiseHandshakeBuilder forI1K1Responder(final KeyPair localStaticKeyPair) {
    try {
      return new NoiseHandshakeBuilder(NoiseHandshake.Role.RESPONDER,
          HandshakePattern.getInstance("I1K1"),
          localStaticKeyPair,
          null);
    } catch (final NoSuchPatternException e) {
      throw new AssertionError("Statically-generated handshake pattern not found", e);
    }
  }

  public static NoiseHandshakeBuilder forI1XInitiator(final KeyPair localStaticKeyPair) {
    try {
      return new NoiseHandshakeBuilder(NoiseHandshake.Role.INITIATOR,
          HandshakePattern.getInstance("I1X"),
          localStaticKeyPair,
          null);
    } catch (final NoSuchPatternException e) {
      throw new AssertionError("Statically-generated handshake pattern not found", e);
    }
  }

  public static NoiseHandshakeBuilder forI1XResponder(final KeyPair localStaticKeyPair) {
    try {
      return new NoiseHandshakeBuilder(NoiseHandshake.Role.RESPONDER,
          HandshakePattern.getInstance("I1X"),
          localStaticKeyPair,
          null);
    } catch (final NoSuchPatternException e) {
      throw new AssertionError("Statically-generated handshake pattern not found", e);
    }
  }

  public static NoiseHandshakeBuilder forIX1Initiator(final KeyPair localStaticKeyPair) {
    try {
      return new NoiseHandshakeBuilder(NoiseHandshake.Role.INITIATOR,
          HandshakePattern.getInstance("IX1"),
          localStaticKeyPair,
          null);
    } catch (final NoSuchPatternException e) {
      throw new AssertionError("Statically-generated handshake pattern not found", e);
    }
  }

  public static NoiseHandshakeBuilder forIX1Responder(final KeyPair localStaticKeyPair) {
    try {
      return new NoiseHandshakeBuilder(NoiseHandshake.Role.RESPONDER,
          HandshakePattern.getInstance("IX1"),
          localStaticKeyPair,
          null);
    } catch (final NoSuchPatternException e) {
      throw new AssertionError("Statically-generated handshake pattern not found", e);
    }
  }

  public static NoiseHandshakeBuilder forI1X1Initiator(final KeyPair localStaticKeyPair) {
    try {
      return new NoiseHandshakeBuilder(NoiseHandshake.Role.INITIATOR,
          HandshakePattern.getInstance("I1X1"),
          localStaticKeyPair,
          null);
    } catch (final NoSuchPatternException e) {
      throw new AssertionError("Statically-generated handshake pattern not found", e);
    }
  }

  public static NoiseHandshakeBuilder forI1X1Responder(final KeyPair localStaticKeyPair) {
    try {
      return new NoiseHandshakeBuilder(NoiseHandshake.Role.RESPONDER,
          HandshakePattern.getInstance("I1X1"),
          localStaticKeyPair,
          null);
    } catch (final NoSuchPatternException e) {
      throw new AssertionError("Statically-generated handshake pattern not found", e);
    }
  }
}
